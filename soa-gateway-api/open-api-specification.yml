openapi: '3.0.0'
info:
  title: 'SOA Gateway API'
  version: '1.0.0'
paths:
  /users/{user-id}/notifications/summary:
    get:
      tags:
        - notifications
      summary: 'Get User Notification Summary'
      operationId: 'getUserNotificationSummary'
      parameters:
        - name: 'user-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: 'abc123'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'

      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notificationSummary"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /contract-details:
    get:
      tags:
        - contract-details
      summary: 'Get Contract Details'
      operationId: 'getContractDetails'
      parameters:
        - name: 'providerFirmId'
          in: 'query'
          required: true
          schema:
            type: 'integer'
            example: '1234'
        - name: 'officeId'
          in: 'query'
          required: true
          schema:
            type: 'integer'
            example: '1234'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contractDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /clients:
    get:
      tags:
        - clients
      summary: 'Get Clients'
      operationId: 'getClients'
      x-spring-paginated: true
      parameters:
        - name: 'first-name'
          in: 'query'
          schema:
            type: 'string'
            example: 'john'
        - name: 'surname'
          in: 'query'
          schema:
            type: 'string'
            example: 'smith'
        - name: 'date-of-birth'
          in: 'query'
          schema:
            type: 'string'
            example: "2017-01-01"
            format: date
        - name: 'gender'
          in: 'query'
          schema:
            type: 'string'
            example: 'Male'
        - name: 'case-reference-number'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'home-office-reference'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'national-insurance-number'
          in: 'query'
          schema:
            type: 'string'
            example: 'AB123456C'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clientDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /clients/{client-reference-number}:
    get:
      tags:
        - clients
      summary: 'Get Client'
      operationId: 'getClient'
      parameters:
        - name: 'client-reference-number'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: 'abc123'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clientDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /case-reference:
    get:
      tags:
        - case-reference
      summary: 'Get case reference number'
      operationId: 'getCaseReference'
      parameters:
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/caseReferenceSummary"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /cases:
    get:
      tags:
        - cases
      summary: 'Get Cases'
      operationId: 'getCases'
      x-spring-paginated: true
      parameters:
        - name: 'case-reference-number'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'provider-case-reference'
          in: 'query'
          schema:
            type: 'string'
            example: "1234567890"
        - name: 'case-status'
          in: 'query'
          schema:
            type: 'string'
            example: 'APPL'
        - name: 'client-surname'
          in: 'query'
          schema:
            type: 'string'
            example: 'smith'
        - name: 'fee-earner-id'
          in: 'query'
          schema:
            type: 'integer'
            example: 1234567890
        - name: 'office-id'
          in: 'query'
          schema:
            type: 'integer'
            example: 1234567890
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/caseDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
components:
  parameters:
    maxRecords:
      in: query
      name: 'max-records'
      required: false
      schema:
        type: 'integer'
        default: 100
      example: 12345
    soaGatewayUserLoginId:
      in: header
      name: 'SoaGateway-User-Login-Id'
      required: true
      schema:
        type: 'string'
      example: 'MARILYN@DESORANDCO.CO.UK'
    soaGatewayUserRole:
      in: header
      name: 'SoaGateway-User-Role'
      required: true
      schema:
        type: 'string'
      example: 'EXTERNAL'
  schemas:
    caseReferenceSummary:
      type: 'object'
      properties:
        case_reference_number:
          type: 'string'
    page:
      type: 'object'
      properties:
        total_pages:
          type: 'integer'
        total_elements:
          type: 'integer'
        number:
          type: 'integer'
        size:
          type: 'integer'
    addressDetail:
      type: 'object'
      properties:
        address_id:
          type: 'string'
        house:
          type: 'string'
        coff_name:
          type: 'string'
        address_line1:
          type: 'string'
        address_line2:
          type: 'string'
        address_line3:
          type: 'string'
        address_line4:
          type: 'string'
        city:
          type: 'string'
        country:
          type: 'string'
        county:
          type: 'string'
        province:
          type: 'string'
        postal_code:
          type: 'string'
    baseClient:
      type: 'object'
      properties:
        client_reference_number:
          type: 'string'
        first_name:
          type: 'string'
        surname:
          type: 'string'
    notificationSummary:
      type: 'object'
      properties:
        notifications:
          type: 'integer'
        standard_actions:
          type: 'integer'
        overdue_actions:
          type: 'integer'
    contractDetails:
      type: 'object'
      properties:
        contracts:
          type: 'array'
          items:
            $ref: '#/components/schemas/contractDetail'
    contractDetail:
      type: 'object'
      properties:
        categoryofLaw:
          type: 'string'
        subCategory:
          type: 'string'
        authorisationType:
          type: 'string'
        createNewMatters:
          type: 'boolean'
        contractualDevolvedPowers:
          type: 'string'
        remainderAuthorisation:
          type: 'boolean'
    clientDetails:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          items:
            $ref: "#/components/schemas/clientSummary"
    clientSummary:
      allOf:
        - $ref: '#/components/schemas/baseClient'
      type: 'object'
      properties:
        surname_at_birth:
          type: 'string'
        full_name:
          type: 'string'
        date_of_birth:
          type: 'string'
          format: 'date'
        gender:
          type: 'string'
        postal_code:
          type: 'string'
        home_office_reference:
          type: 'string'
        national_insurance_number:
          type: 'string'
    clientNameDetail:
      type: 'object'
      properties:
        title:
          type: 'string'
        surname:
          type: 'string'
        first_name:
          type: 'string'
        middle_name:
          type: 'string'
        surname_at_birth:
          type: 'string'
        full_name:
          type: 'string'
    clientPersonalDetail:
      type: 'object'
      properties:
        date_of_birth:
          type: 'string'
          format: date
        date_of_death:
          type: 'string'
          format: date
        gender:
          type: 'string'
        marital_status:
          type: 'string'
        national_insurance_number:
          type: 'string'
        home_office_number:
          type: 'string'
        vulnerable_client:
          type: 'string'
        high_profile_client:
          type: 'string'
        vexatious_litigant:
          type: 'string'
        country_of_origin:
          type: 'string'
        mental_capacity_ind:
          type: 'string'
    clientContactDetail:
      type: 'object'
      properties:
        telephone_home:
          type: 'string'
        telephone_work:
          type: 'string'
        mobile_number:
          type: 'string'
        email_address:
          type: 'string'
        password:
          type: 'string'
        password_reminder:
          type: 'string'
        correspondence_method:
          type: 'string'
        correspondence_language:
          type: 'string'
    clientUserDetail:
      type: object
      properties:
        user_login_id:
          type: string
        user_name:
          type: string
        user_type:
          type: string
    clientDetail:
      type: 'object'
      properties:
        client_reference_number:
          type: 'string'
        details:
          type: 'object'
          properties:
            name:
              $ref: '#/components/schemas/clientNameDetail'
            personal_information:
              $ref: '#/components/schemas/clientPersonalDetail'
            contacts:
              $ref: '#/components/schemas/clientContactDetail'
            disability_monitoring:
              type: 'object'
              properties:
                disability_type:
                  type: 'array'
                  items:
                    type: 'string'
            no_fixed_abode:
              type: 'string'
            address:
              $ref: '#/components/schemas/addressDetail'
            ethnic_monitoring:
              type: 'string'
            special_considerations:
              type: 'string'
        record_history:
          type: 'object'
          properties:
            created_by:
              $ref: '#/components/schemas/clientUserDetail'
            date_created:
              type: 'string'
              format: date-time
            last_updated_by:
              $ref: '#/components/schemas/clientUserDetail'
            date_last_updated:
              type: 'string'
              format: date-time

    caseDetails:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          items:
            $ref: "#/components/schemas/caseSummary"
    caseSummary:
      type: 'object'
      properties:
        case_reference_number:
          type: 'string'
        provider_case_reference_number:
          type: 'string'
        client:
          $ref: '#/components/schemas/baseClient'
        fee_earner_name:
          type: 'string'
        category_of_law:
          type: 'string'
        case_status_display:
          type: 'string'