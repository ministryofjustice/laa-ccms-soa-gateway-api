openapi: '3.0.0'
info:
  title: 'SOA Gateway API'
  version: '1.0.0'
paths:
  /users/{user-id}/notifications/summary:
    get:
      tags:
        - notifications
      summary: 'Get User Notification Summary'
      operationId: 'getUserNotificationSummary'
      parameters:
        - name: 'user-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: 'abc123'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'

      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notificationSummary"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

  /notifications:
    get:
      tags:
        - notifications
      summary: 'Get Notifications'
      operationId: 'getNotifications'
      x-spring-paginated: true
      parameters:
        - name: 'case-reference-number'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'provider-case-reference'
          in: 'query'
          schema:
            type: 'string'
            example: "1234567890"
        - name: 'assigned-to-user-id'
          in: 'query'
          schema:
            type: 'string'
            example: 'abc123'
        - name: 'client-surname'
          in: 'query'
          schema:
            type: 'string'
            example: 'smith'
        - name: 'fee-earner-id'
          in: 'query'
          schema:
            type: 'integer'
            example: 1234567890
        - name: 'include-closed'
          in: 'query'
          schema:
            type: boolean
          allowEmptyValue: true
        - name: 'notification-type'
          in: 'query'
          schema:
            type: 'string'
            example: 'A'
        - name: 'date-from'
          in: 'query'
          schema:
            type: 'string'
            example: "2017-01-01"
            format: date
        - name: 'date-to'
          in: 'query'
          schema:
            type: 'string'
            example: "2017-01-01"
            format: date
        - name: 'sort'
          in: 'query'
          schema:
            type: 'array'
            items:
              type: 'string'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notifications"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

  /contract-details:
    get:
      tags:
        - contract-details
      summary: 'Get Contract Details'
      operationId: 'getContractDetails'
      parameters:
        - name: 'providerFirmId'
          in: 'query'
          required: true
          schema:
            type: 'integer'
            example: '1234'
        - name: 'officeId'
          in: 'query'
          required: true
          schema:
            type: 'integer'
            example: '1234'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contractDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

  /clients:
    get:
      tags:
        - clients
      summary: 'Get Clients'
      operationId: 'getClients'
      x-spring-paginated: true
      parameters:
        - name: 'first-name'
          in: 'query'
          schema:
            type: 'string'
            example: 'john'
        - name: 'surname'
          in: 'query'
          schema:
            type: 'string'
            example: 'smith'
        - name: 'date-of-birth'
          in: 'query'
          schema:
            type: 'string'
            example: "2017-01-01"
            format: date
        - name: 'gender'
          in: 'query'
          schema:
            type: 'string'
            example: 'Male'
        - name: 'case-reference-number'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'home-office-reference'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'national-insurance-number'
          in: 'query'
          schema:
            type: 'string'
            example: 'AB123456C'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clientDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

    post:
      tags:
        - clients
      summary: 'Create Client'
      operationId: 'createClient'
      requestBody:
        description: Create a client
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clientDetailDetails"
      parameters:
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clientTransactionResponse"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

  /clients/status/{transaction-request-id}:
    get:
      tags:
        - clients
      summary: 'Get Client transaction status'
      operationId: 'getClientTransactionStatus'
      parameters:
        - name: 'transaction-request-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: 'abc123'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transactionStatus"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

  /clients/{client-reference-number}:
    get:
      tags:
        - clients
      summary: 'Get Client'
      operationId: 'getClient'
      parameters:
        - name: 'client-reference-number'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: 'abc123'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clientDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    put:
      tags:
        - clients
      summary: 'Update Client'
      operationId: 'updateClient'
      requestBody:
        description: update a client
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clientDetailDetails"
      parameters:
        - name: 'client-reference-number'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: 'abc123'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clientTransactionResponse"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

  /case-reference:
    get:
      tags:
        - case-reference
      summary: 'Get case reference number'
      operationId: 'getCaseReference'
      parameters:
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/caseReferenceSummary"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /cases:
    get:
      tags:
        - cases
      summary: 'Get Cases'
      operationId: 'getCases'
      x-spring-paginated: true
      parameters:
        - name: 'case-reference-number'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'provider-case-reference'
          in: 'query'
          schema:
            type: 'string'
            example: "1234567890"
        - name: 'case-status'
          in: 'query'
          schema:
            type: 'string'
            example: 'APPL'
        - name: 'client-surname'
          in: 'query'
          schema:
            type: 'string'
            example: 'smith'
        - name: 'fee-earner-id'
          in: 'query'
          schema:
            type: 'integer'
            example: 1234567890
        - name: 'office-id'
          in: 'query'
          schema:
            type: 'integer'
            example: 1234567890
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/caseDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    post:
      tags:
        - cases
      summary: 'Create Cases'
      operationId: 'createCases'
      requestBody:
        description: Create a case
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/caseDetail"
      parameters:
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/caseTransactionResponse"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /cases/{case-reference-number}:
    get:
      tags:
        - cases
      summary: 'Get Case Details'
      operationId: 'getCase'
      x-spring-paginated: false
      parameters:
        - name: 'case-reference-number'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '1234567890'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/caseDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /cases/status/{transaction-request-id}:
    get:
      tags:
        - cases
      summary: 'Get Case transaction status'
      operationId: 'getCaseTransactionStatus'
      parameters:
        - name: 'transaction-request-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: 'abc123'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/transactionStatus"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /organisations:
    get:
      tags:
        - organisations
      summary: 'Get Organisations'
      operationId: 'getOrganisations'
      x-spring-paginated: true
      parameters:
        - name: 'name'
          in: 'query'
          schema:
            type: 'string'
            example: 'org name'
        - name: 'type'
          in: 'query'
          schema:
            type: 'string'
            example: 'org type'
        - name: 'city'
          in: 'query'
          schema:
            type: 'string'
            example: 'london'
        - name: 'postcode'
          in: 'query'
          schema:
            type: 'string'
            example: 'ls1 1ad'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/organisationDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /organisations/{organisation-id}:
    get:
      tags:
        - organisations
      summary: 'Get Organisation Detail'
      operationId: 'getOrganisation'
      x-spring-paginated: false
      parameters:
        - name: 'organisation-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '1234567890'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - $ref: '#/components/parameters/maxRecords'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/organisationDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /documents:
    post:
      tags:
        - documents
      summary: 'Register Document'
      operationId: 'registerDocument'
      requestBody:
        description: Base document details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/baseDocument"
      parameters:
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - name: 'notification-reference'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clientTransactionResponse"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /documents/{document-id}:
    get:
      tags:
        - documents
      summary: 'Download Document'
      operationId: 'downloadDocument'
      x-spring-paginated: false
      parameters:
        - name: 'document-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '1234567890'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/document"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    put:
      tags:
        - documents
      summary: 'Upload Document'
      operationId: 'uploadDocument'
      requestBody:
        description: Document details
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/document"
      parameters:
        - name: 'document-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '1234567890'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
        - name: 'notification-reference'
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clientTransactionResponse"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /documents/{document-id}/cover-sheet:
    get:
      tags:
        - documents
      summary: 'Download Document Cover Sheet'
      operationId: 'downloadDocumentCoverSheet'
      x-spring-paginated: false
      parameters:
        - name: 'document-id'
          in: 'path'
          required: true
          schema:
            type: 'string'
            example: '1234567890'
        - $ref: '#/components/parameters/soaGatewayUserLoginId'
        - $ref: '#/components/parameters/soaGatewayUserRole'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/coverSheet"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  parameters:
    maxRecords:
      in: query
      name: 'max-records'
      required: false
      schema:
        type: 'integer'
        default: 100
      example: 12345
    soaGatewayUserLoginId:
      in: header
      name: 'SoaGateway-User-Login-Id'
      required: true
      schema:
        type: 'string'
      example: 'MARILYN@DESORANDCO.CO.UK'
    soaGatewayUserRole:
      in: header
      name: 'SoaGateway-User-Role'
      required: true
      schema:
        type: 'string'
      example: 'EXTERNAL'
  schemas:
    caseReferenceSummary:
      type: 'object'
      properties:
        case_reference_number:
          type: 'string'
    transactionStatus:
      type: 'object'
      properties:
        submission_status:
          type: 'string'
          example: 'success'
        reference_number:
          type: 'string'
          example: 'abc123'
    clientTransactionResponse:
      type: 'object'
      properties:
        transaction_id:
          type: 'string'
          example: '1234567890'
        reference_number:
          type: 'string'
          example: 'abc123'
    caseTransactionResponse:
      type: 'object'
      properties:
        transaction_id:
          type: 'string'
          example: '1234567890'
    page:
      type: 'object'
      properties:
        total_pages:
          type: 'integer'
        total_elements:
          type: 'integer'
        number:
          type: 'integer'
        size:
          type: 'integer'
    userDetail:
      type: object
      properties:
        user_login_id:
          type: string
        user_name:
          type: string
        user_type:
          type: string
    addressDetail:
      type: 'object'
      properties:
        address_id:
          type: 'string'
        house:
          type: 'string'
        care_of_name:
          type: 'string'
        address_line1:
          type: 'string'
        address_line2:
          type: 'string'
        address_line3:
          type: 'string'
        address_line4:
          type: 'string'
        city:
          type: 'string'
        country:
          type: 'string'
        county:
          type: 'string'
        province:
          type: 'string'
        state:
          type: 'string'
        postal_code:
          type: 'string'
    baseClient:
      type: 'object'
      properties:
        client_reference_number:
          type: 'string'
        first_name:
          type: 'string'
        surname:
          type: 'string'
    clientDetailDetails:
      type: 'object'
      properties:
        name:
          $ref: '#/components/schemas/nameDetail'
        personal_information:
          $ref: '#/components/schemas/clientPersonalDetail'
        contacts:
          $ref: '#/components/schemas/contactDetail'
        disability_monitoring:
          type: 'object'
          properties:
            disability_type:
              type: 'array'
              items:
                type: 'string'
        no_fixed_abode:
          type: 'boolean'
        address:
          $ref: '#/components/schemas/addressDetail'
        ethnic_monitoring:
          type: 'string'
        special_considerations:
          type: 'string'
    nameDetail:
      type: 'object'
      properties:
        title:
          type: 'string'
        surname:
          type: 'string'
        first_name:
          type: 'string'
        middle_name:
          type: 'string'
        surname_at_birth:
          type: 'string'
        full_name:
          type: 'string'
    baseContact:
      type: 'object'
      properties:
        telephone_home:
          type: 'string'
        telephone_work:
          type: 'string'
        mobile_number:
          type: 'string'
        email_address:
          type: 'string'
        fax:
          type: 'string'
    contactDetail:
      allOf:
        - $ref: '#/components/schemas/baseContact'
      type: 'object'
      properties:
        password:
          type: 'string'
        password_reminder:
          type: 'string'
        correspondence_method:
          type: 'string'
        correspondence_language:
          type: 'string'
    notificationSummary:
      type: 'object'
      properties:
        notifications:
          type: 'integer'
        standard_actions:
          type: 'integer'
        overdue_actions:
          type: 'integer'
    contractDetails:
      type: 'object'
      properties:
        contracts:
          type: 'array'
          items:
            $ref: '#/components/schemas/contractDetail'
    contractDetail:
      type: 'object'
      properties:
        categoryofLaw:
          type: 'string'
        subCategory:
          type: 'string'
        authorisationType:
          type: 'string'
        createNewMatters:
          type: 'boolean'
        contractualDevolvedPowers:
          type: 'string'
        remainderAuthorisation:
          type: 'boolean'
    clientDetails:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: "#/components/schemas/clientSummary"
    clientSummary:
      allOf:
        - $ref: '#/components/schemas/baseClient'
      type: 'object'
      properties:
        surname_at_birth:
          type: 'string'
        full_name:
          type: 'string'
        date_of_birth:
          type: 'string'
          format: 'date'
        gender:
          type: 'string'
        postal_code:
          type: 'string'
        home_office_reference:
          type: 'string'
        national_insurance_number:
          type: 'string'
    clientPersonalDetail:
      type: 'object'
      properties:
        date_of_birth:
          type: 'string'
          format: date
        date_of_death:
          type: 'string'
          format: date
        gender:
          type: 'string'
        marital_status:
          type: 'string'
        national_insurance_number:
          type: 'string'
        home_office_number:
          type: 'string'
        vulnerable_client:
          type: 'boolean'
        high_profile_client:
          type: 'boolean'
        vexatious_litigant:
          type: 'boolean'
        country_of_origin:
          type: 'string'
        mental_capacity_ind:
          type: 'boolean'
    clientDetail:
      type: 'object'
      properties:
        client_reference_number:
          type: 'string'
        details:
          $ref: '#/components/schemas/clientDetailDetails'
        record_history:
          $ref: '#/components/schemas/recordHistory'

    caseDetails:
      allOf:
        - $ref: "#/components/schemas/page"
      type: 'object'
      properties:
        content:
          type: 'array'
          default: []
          items:
            $ref: "#/components/schemas/caseSummary"
    caseSummary:
      type: 'object'
      properties:
        case_reference_number:
          type: 'string'
        provider_case_reference_number:
          type: 'string'
        client:
          $ref: '#/components/schemas/baseClient'
        fee_earner_name:
          type: 'string'
        category_of_law:
          type: 'string'
        case_status_display:
          type: 'string'
    caseDetail:
      type: 'object'
      properties:
        case_reference_number:
          type: 'string'
        application_details:
          $ref: '#/components/schemas/submittedApplicationDetails'
        certificate_type:
          type: 'string'
        certificate_date:
          type: 'string'
          format: date
        pre_certificate_costs:
          type: 'number'
        legal_help_costs:
          type: 'number'
        undertaking_amount:
          type: 'number'
        linked_cases:
          type: 'array'
          items:
            $ref: '#/components/schemas/linkedCase'
        awards:
          type: 'array'
          items:
            $ref: '#/components/schemas/award'
        prior_authorities:
          type: 'array'
          items:
            $ref: '#/components/schemas/priorAuthority'
        discharge_status:
          $ref: '#/components/schemas/discharge'
        available_functions:
          type: 'array'
          items:
            type: 'string'
        case_status:
          $ref: '#/components/schemas/caseStatus'
        record_history:
          $ref: '#/components/schemas/recordHistory'
        case_docs:
          type: 'array'
          items:
            $ref: '#/components/schemas/caseDoc'
    submittedApplicationDetails:
      type: 'object'
      properties:
        client:
          $ref: '#/components/schemas/baseClient'
        preferred_address:
          type: 'string'
        correspondence_address:
          $ref: '#/components/schemas/addressDetail'
        provider_details:
          $ref: '#/components/schemas/providerDetail'
        category_of_law:
          $ref: '#/components/schemas/categoryOfLaw'
        other_parties:
          type: 'array'
          items:
            $ref: '#/components/schemas/otherParty'
        external_resources:
          type: 'array'
          items:
            $ref: '#/components/schemas/externalResource'
        proceedings:
          type: 'array'
          items:
            $ref: '#/components/schemas/proceedingDetail'
        means_assesments:
          type: 'array'
          items:
            $ref: '#/components/schemas/assessmentResult'
        merits_assesments:
          type: 'array'
          items:
            $ref: '#/components/schemas/assessmentResult'
        date_of_first_attendance:
          type: 'string'
          format: date
        purpose_of_application:
          type: 'string'
        fixed_hearing_date_ind:
          type: 'boolean'
        date_of_hearing:
          type: 'string'
          format: date
        purpose_of_hearing:
          type: 'string'
        high_profile_case_ind:
          type: 'boolean'
        devolved_powers_date:
          type: 'string'
          format: date
        application_amendment_type:
          type: 'string'
        lar_details:
          $ref: '#/components/schemas/larDetails'
        certificate_type:
          type: 'string'
    providerDetail:
      type: object
      properties:
        provider_case_reference_number:
          type: 'string'
        provider_firm_id:
          type: 'string'
        provider_office_id:
          type: 'string'
        contact_user_id:
          $ref: '#/components/schemas/userDetail'
        contact_details:
          $ref: '#/components/schemas/contactDetail'
        supervisor_contact_id:
          type: 'string'
        fee_earner_contact_id:
          type: 'string'
    categoryOfLaw:
      type: object
      properties:
        category_of_law_code:
          type: 'string'
        category_of_law_description:
          type: 'string'
        requested_amount:
          type: number
        granted_amount:
          type: number
        total_paid_to_date:
          type: number
        cost_limitations:
          type: 'array'
          items:
            $ref: '#/components/schemas/costLimitation'
    costLimitation:
      type: 'object'
      properties:
        cost_limit_id:
          type: 'string'
        billing_provider_id:
          type: 'string'
        billing_provider_name:
          type: 'string'
        cost_category:
          type: 'string'
        paid_to_date:
          type: 'number'
        amount:
          type: 'number'
    proceedingDetail:
      type: object
      properties:
        proceeding_case_id:
          type: 'string'
        date_applied:
          type: 'string'
          format: date
        status:
          type: 'string'
        lead_proceeding_indicator:
          type: 'boolean'
        outcome_court_case_number:
          type: 'string'
        available_functions:
          type: 'array'
          items:
            type: 'string'
        proceeding_type:
          type: 'string'
        proceeding_description:
          type: 'string'
        date_costs_valid:
          type: 'string'
          format: date
        order_type:
          type: 'string'
        matter_type:
          type: 'string'
        level_of_service:
          type: 'string'
        stage:
          type: 'string'
        client_involvement_type:
          type: 'string'
        scope_limitations:
          type: 'array'
          items:
            $ref: '#/components/schemas/scopeLimitation'
        scope_limitation_applied:
          type: 'string'
        devolved_powers_ind:
          type: 'boolean'
        date_devolved_powers_used:
          type: 'string'
          format: date
        date_granted:
          type: 'string'
          format: date
        outcome:
          $ref: '#/components/schemas/outcomeDetail'
    outcomeDetail:
      type: 'object'
      properties:
        issue_date:
          type: 'string'
          format: date
        final_work_date:
          type: 'string'
          format: date
        stage_end:
          type: 'string'
        resolution_method:
          type: 'string'
        result:
          type: 'string'
        additional_result_info:
          type: 'string'
        alt_dispute_resolution:
          type: 'string'
        alt_acceptance_reason:
          type: 'string'
        court_code:
          type: 'string'
        wider_benefits:
          type: 'string'
        outcome_court_case_number:
          type: 'string'
    otherParty:
      type: 'object'
      properties:
        other_party_id:
          type: 'string'
        shared_ind:
          type: 'boolean'
        person:
          $ref: '#/components/schemas/otherPartyPerson'
        organisation:
          $ref: '#/components/schemas/otherPartyOrganisation'
    otherPartyPerson:
      type: 'object'
      properties:
        name:
          $ref: '#/components/schemas/nameDetail'
        date_of_birth:
          type: 'string'
          format: date
        address:
          $ref: '#/components/schemas/addressDetail'
        relation_to_client:
          type: 'string'
        relation_to_case:
          type: 'string'
        ni_number:
          type: 'string'
        contact_name:
          type: 'string'
        contact_details:
          $ref: '#/components/schemas/contactDetail'
        organization_name:
          type: 'string'
        employers_name:
          type: 'string'
        employment_status:
          type: 'string'
        organization_address:
          type: 'string'
        party_legal_aided_ind:
          type: 'boolean'
        certificateNumber:
          type: 'string'
        court_ordered_means_assesment:
          type: 'boolean'
        assessed_income_frequency:
          type: 'string'
        assessed_income:
          type: 'number'
        assessed_assets:
          type: 'number'
        assessment_date:
          type: 'string'
          format: date
        public_funding_applied_ind:
          type: 'boolean'
        other_information:
          type: 'string'
    otherPartyOrganisation:
      type: 'object'
      properties:
        organization_name:
          type: 'string'
        organization_type:
          type: 'string'
        currently_trading:
          type: 'string'
        relation_To_client:
          type: 'string'
        relation_to_case:
          type: 'string'
        address:
          $ref: '#/components/schemas/addressDetail'
        contact_name:
          type: 'string'
        contact_details:
          $ref: '#/components/schemas/contactDetail'
        other_information:
          type: 'string'
    larDetails:
      type: 'object'
      properties:
        lar_scope_flag:
          type: 'boolean'
        legal_help_office_code:
          type: 'string'
        legal_help_ufn:
          type: 'string'
    externalResource:
      type: 'object'
      properties:
        external_resource_ref:
          type: 'string'
        external_resource_type:
          type: 'string'
        date_instructed:
          type: 'string'
          format: date
        cost_ceiling:
          type: 'array'
          items:
            $ref: '#/components/schemas/costLimitation'
        location:
          type: 'string'
        chambers:
          type: 'string'
    recovery:
      type: 'object'
      properties:
        award_value:
          type: 'number'
        recovered_amount:
          $ref: '#/components/schemas/recoveredAmount'
        un_recovered_amount:
          type: 'number'
        leave_of_court_reqd_ind:
          type: 'boolean'
        offered_amount:
          $ref: '#/components/schemas/offeredAmount'
    recoveredAmount:
      type: 'object'
      properties:
        solicitor:
          $ref: '#/components/schemas/recoveryAmount'
        court:
          $ref: '#/components/schemas/recoveryAmount'
        client:
          $ref: '#/components/schemas/recoveryAmount'
    recoveryAmount:
      type: 'object'
      properties:
        amount:
          type: 'number'
        date_received:
          type: 'string'
          format: date
        paid_to_lsc:
          type: 'number'
    offeredAmount:
      type: 'object'
      properties:
        amount:
          type: 'number'
        conditions_of_offer:
          type: 'string'
    scopeLimitation:
      type: object
      properties:
        scope_limitation_id:
          type: 'string'
        scope_limitation:
          type: 'string'
        scope_limitation_wording:
          type: 'string'
        delegated_functions_apply:
          type: 'boolean'
    assessmentResult:
      type: object
      properties:
        assessment_id:
          type: 'string'
        default_ind:
          type: 'boolean'
        date:
          type: 'string'
          format: date
        results:
          type: 'array'
          items:
            $ref: '#/components/schemas/opaGoal'
        assessment_details:
          type: 'array'
          items:
            $ref: '#/components/schemas/assessmentScreen'
    opaGoal:
      type: 'object'
      properties:
        attribute:
          type: 'string'
        attribute_value:
          type: 'string'
    assessmentScreen:
      type: 'object'
      properties:
        screen_name:
          type: 'string'
        caption:
          type: 'string'
        entity:
          type: 'array'
          items:
            $ref: '#/components/schemas/opaEntity'
    opaEntity:
      type: 'object'
      properties:
        sequence_number:
          type: 'integer'
        entity_name:
          type: 'string'
        caption:
          type: 'string'
        instances:
          type: 'array'
          items:
            $ref: '#/components/schemas/opaInstance'
    opaInstance:
      type: 'object'
      properties:
        instance_label:
          type: 'string'
        caption:
          type: 'string'
        attributes:
          type: 'array'
          items:
            $ref: '#/components/schemas/opaAttribute'
    opaAttribute:
      type: 'object'
      properties:
        attribute:
          type: 'string'
        caption:
          type: 'string'
        response_type:
          type: 'string'
        response_value:
          type: 'string'
        response_text:
          type: 'string'
        user_defined_ind:
          type: 'boolean'
    linkedCase:
      type: 'object'
      properties:
        case_reference_number:
          type: 'string'
        provider_reference_number:
          type: 'string'
        client:
          $ref: '#/components/schemas/baseClient'
        category_of_law_code:
          type: 'string'
        category_of_law_desc:
          type: 'string'
        fee_earner_id:
          type: 'string'
        fee_earner_name:
          type: 'string'
        public_funding_applied_ind:
          type: 'boolean'
        link_type:
          type: 'string'
        case_status:
          type: 'string'
    award:
      type: 'object'
      properties:
        award_id:
          type: 'string'
        award_type:
          type: 'string'
        delete_allowed:
          type: 'boolean'
        update_allowed:
          type: 'boolean'
        award_category:
          type: 'string'
        cost_award:
          $ref: '#/components/schemas/costAward'
        financial_award:
          $ref: '#/components/schemas/financialAward'
        land_award:
          $ref: '#/components/schemas/landAward'
        other_asset:
          $ref: '#/components/schemas/otherAsset'
    costAward:
      type: object
      properties:
        order_date:
          type: 'string'
          format: date
        court_assessment_status:
          type: 'string'
        pre_certificate_award_lsc:
          type: 'number'
        pre_certificate_award_oth:
          type: 'number'
        certificate_cost_rate_lsc:
          type: 'number'
        certificate_cost_rate_market:
          type: 'number'
        awarded_by:
          type: 'string'
        interest_awarded_rate:
          type: 'number'
        interest_awarded_start_date:
          type: 'string'
          format: date
        other_details:
          type: 'string'
        liable_parties:
          type: 'array'
          items:
            type: 'string'
        order_date_served:
          type: 'string'
          format: date
        service_address:
          $ref: '#/components/schemas/serviceAddress'
        recovery:
          $ref: '#/components/schemas/recovery'
    serviceAddress:
      type: 'object'
      properties:
        address_line_1:
          type: 'string'
        address_line_2:
          type: 'string'
        address_line_3:
          type: 'string'
    financialAward:
      type: 'object'
      properties:
        order_date:
          type: 'string'
          format: date
        amount:
          type: 'number'
        interim_award:
          type: 'number'
        awarded_by:
          type: 'string'
        award_justifications:
          type: 'string'
        statutory_change_reason:
          type: 'string'
        other_details:
          type: 'string'
        liable_parties:
          type: 'array'
          items:
            type: 'string'
        order_date_served:
          type: 'string'
          format: date
        service_address:
          $ref: '#/components/schemas/serviceAddress'
        recovery:
          $ref: '#/components/schemas/recovery'
    landAward:
      type: 'object'
      properties:
        orderDate:
          type: 'string'
          format: date
        description:
          type: 'string'
        title_no:
          type: 'string'
        property_address:
          $ref: '#/components/schemas/serviceAddress'
        valuation:
          $ref: '#/components/schemas/valuation'
        disputed_percentage:
          type: 'number'
        awarded_percentage:
          type: 'number'
        mortgage_amount_due:
          type: 'number'
        equity:
          type: 'string'
        awarded_by:
          type: 'string'
        recovery:
          type: 'string'
        no_recovery_details:
          type: 'string'
        stat_charge_exempt_reason:
          type: 'string'
        land_charge_registration:
          type: 'string'
        registration_ref:
          type: 'string'
        other_proprietors:
          type: 'array'
          items:
            type: 'string'
        time_related_award:
          $ref: '#/components/schemas/timeRelatedAward'
    valuation:
      type: 'object'
      properties:
        amount:
          type: 'number'
        criteria:
          type: 'string'
        date:
          type: 'string'
          format: date
    timeRelatedAward:
      type: 'object'
      properties:
        award_type:
          type: 'string'
        description:
          type: 'string'
        amount:
          type: 'number'
        award_triggering_event:
          type: 'string'
        award_date:
          type: 'string'
          format: date
        other_details:
          type: 'string'
    otherAsset:
      type: 'object'
      properties:
        order_date:
          type: 'string'
          format: date
        description:
          type: 'string'
        valuation:
          $ref: '#/components/schemas/valuation'
        awarded_amount:
          type: 'number'
        awarded_percentage:
          type: 'number'
        recovered_amount:
          type: 'number'
        recovered_percentage:
          type: 'number'
        disputed_amount:
          type: 'number'
        disputed_percentage:
          type: 'number'
        awarded_by:
          type: 'string'
        recovery:
          type: 'string'
        no_recovery_details:
          type: 'string'
        held_by:
          type: 'array'
          items:
            type: 'string'
        time_related_award:
          $ref: '#/components/schemas/timeRelatedAward'
        stat_charge_exempt_reason:
          type: 'string'
    priorAuthority:
      type: 'object'
      properties:
        prior_authority_type:
          type: 'string'
        description:
          type: 'string'
        reason_for_request:
          type: 'string'
        request_amount:
          type: 'number'
        decision_status:
          type: 'string'
        assessed_amount:
          type: 'number'
        details:
          type: 'array'
          items:
            $ref: '#/components/schemas/priorAuthorityAttribute'
    priorAuthorityAttribute:
      type: 'object'
      properties:
        name:
          type: 'string'
        value:
          type: 'string'
    discharge:
      type: 'object'
      properties:
        reason:
          type: 'string'
        client_continue_pvt_ind:
          type: 'boolean'
        other_details:
          type: 'string'
    caseStatus:
      type: 'object'
      properties:
        actual_case_status:
          type: 'string'
        display_case_status:
          type: 'string'
        status_update_ind:
          type: 'boolean'
    recordHistory:
      type: 'object'
      properties:
        created_by:
          $ref: '#/components/schemas/userDetail'
        date_created:
          type: 'string'
          format: date
        last_updated_by:
          $ref: '#/components/schemas/userDetail'
        date_last_updated:
          type: 'string'
          format: date
    caseDoc:
      type: 'object'
      properties:
        ccms_document_id:
          type: 'string'
        document_subject:
          type: 'string'
    notifications:
      allOf:
        - $ref: "#/components/schemas/page"
      type: object
      properties:
        content:
          type: array
          default: []
          items:
            $ref: '#/components/schemas/notification'
    notification:
      type: 'object'
      properties:
        client_reference_number:
          type: 'string'
        case_reference_number:
          type: 'string'
        provider_case_reference_number:
          type: 'string'
        user:
          $ref: '#/components/schemas/userDetail'
        client_name:
          type: 'string'
        category_of_law:
          type: 'string'
        fee_earner:
          type: 'string'
        notification_id:
          type: 'string'
        provider_firm_id:
          type: 'string'
        subject:
          type: 'string'
        assign_date:
          type: 'string'
          format: date
        due_date:
          type: 'string'
          format: date
        notification_type:
          type: 'string'
        status:
          type: 'string'
        notes:
          type: 'array'
          items:
            $ref: '#/components/schemas/note'
        evidence_allowed:
          type: 'boolean'
        notification_open_indicator:
          type: 'boolean'
        attached_documents:
          type: 'array'
          items:
            $ref: '#/components/schemas/document'
        uploaded_documents:
          type: 'array'
          items:
            $ref: '#/components/schemas/document'
        available_responses:
          type: array
          items:
            type: 'string'
    note:
      type: 'object'
      properties:
        notes_id:
          type: 'string'
        user:
          $ref: '#/components/schemas/userDetail'
        date:
          type: 'string'
          format: date
        message:
          type: 'string'
    baseDocument:
      type: 'object'
      properties:
        document_type:
          type: 'string'
        file_extension:
          type: 'string'
        text:
          type: 'string'
    document:
      allOf:
        - $ref: "#/components/schemas/baseDocument"
      type: 'object'
      properties:
        document_id:
          type: 'string'
        channel:
          type: 'string'
        document_link:
          type: 'string'
        file_data:
          type: 'string'
        status:
          type: 'string'
        status_description:
          type: 'string'
    coverSheet:
      type: 'object'
      properties:
        document_id:
          type: 'string'
        file_data:
          type: 'string'
    organisationDetails:
      allOf:
        - $ref: "#/components/schemas/page"
      type: object
      properties:
        content:
          type: array
          default: []
          items:
            $ref: '#/components/schemas/organisationSummary'
    organisationSummary:
      type: 'object'
      properties:
        party_id:
          type: 'string'
        name:
          type: 'string'
        type:
          type: 'string'
        city:
          type: 'string'
        postcode:
          type: 'string'
    organisationDetail:
      type: 'object'
      properties:
        party_id:
          type: 'string'
        name:
          type: 'string'
        type:
          type: 'string'
        currently_trading:
          type: 'boolean'
        address:
          $ref: '#/components/schemas/addressDetail'
        contact_name:
          type: 'string'
        contact_details:
          $ref: '#/components/schemas/baseContact'
        other_information:
          type: 'string'

security:
  - ApiKeyAuth: []
